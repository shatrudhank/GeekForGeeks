//https://practice.geeksforgeeks.org/problems/longest-palindrome-in-a-string/0

import java.io.BufferedReader;
import java.io.Console;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;

public class Program {
   static BufferedReader  br=new BufferedReader(new InputStreamReader(System.in));
	public static void main(String args[] ) throws Exception {		
		 int t=Integer.parseInt( br.readLine());
		 while(t-->0)
		 {
			String str=br.readLine();
		 System.out.println(palindromeString(str.length(),str));
		 }
		
		
	}
	
	static String palindromeString(int n,String str)
	{
		boolean[][] rs=new boolean[n][n];
		int maxlen=1;
		int idx=0;
		for(int i=0;i<n;i++)
		{
			rs[i][i]=true;
		}
		for(int i=0;i<n-1;i++)
		{
			if(str.charAt(i)==str.charAt(i+1))
			{
				rs[i][i+1]=true;
				if(maxlen<2)
				{
					idx=i;
					maxlen=2;
				}
			}
		}
		for(int l=3;l<=n;l++)
		{
		   for(int i=0;i<n-l+1;i++)
		   {
			   int j=i+l-1;
			   if(str.charAt(i)==str.charAt(j) && rs[i+1][j-1])
			   {
				   rs[i][j]=true;
				if(l>maxlen)
				{
					maxlen=l;
					idx=i;
				}
			   }
		   }
		}
		return str.substring(idx,idx+ maxlen);
	}
	
}
